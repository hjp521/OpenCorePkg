language: cpp
env:
  global:
  - FORCE_INSTALL=1
  - HAS_OPENSSL_BUILD=1
  - HAS_OPENSSL_W32BUILD=0
  - WERROR=1
  - secure: oRRn6xhk7BdJB6o/l6JzD5jvwUIVkT8hMgvpy3WfkdfaqvpBEX2TWplJUQR5Lr8GzWK9+sYFA48PWQISPCIqxvs9R9etjhfzPYYp/YVOcxOmHNr8TFuN763cx/Dnq71ehJQhTlOe4g6ldodn6lQoH5D4q57bn/fkMO4GLS7LEbtXxVmUT/YvqX+gYlz2DNRIc4NxKUPyQpkckSpZfSBhQqLvav8ESIT8Z4v//G6+JSV5zaA7ITVUQYYmx/PCqgLqrn4h3TvHK+7sNEQYeS/c9NNfiZrLVbpW4hoPsfCQsRhzdouw7pO6gWL/kofkvelcVjAnViZ6Ox0++Rm0qQGeIBSdIiSNP2vjMPf0Cuc+WzGh1NnL1reCZMvhLE/lax/7FwCJK95/1f0r6UfXtb/oPJJxAYC0hXZASQNN2BItasHR6esp/bzP/QTzMfGU+6N5x3WU9udbfUVsqcShJizI3oXzIR/Q4Fqa3rmqd9Aj955FTofJtVhdyYsOs5c/9TR+vrzRX1RSSXBzCHZ7N4ZxYeq0tSglXzqngfy8+LjEntsCixNLbpG36gMo63AAQmBU46J8O/QU3q4ElgNjD2st+J6ft7aIqtplAQFjGhIV+odR3gEGiVAE257cqrHmZgyQjFm3786SNnJTiv8cSpAbduayPno2t3PlnAJqARobup8=

matrix:
  include:

  - os: osx
    name: "Build macOS XCODE5"
    osx_image: xcode10.2
    compiler: clang

    script:
    - HOMEBREW_NO_INSTALL_CLEANUP=1 HOMEBREW_NO_AUTO_UPDATE=1 brew install openssl mingw-w64
    - "./build_duet.tool"
    - "./build_oc.tool"

    deploy:
      provider: releases
      skip_cleanup: true
      file:
      - Binaries/*.zip
      file_glob: true
      on:
        tags: true
      api_key:
        secure: CRCTmf0iRZTtZW3+G/S0fcvwiXgJJQbnmit7Q5FsUIGKaTGvwzRJa6jszt31gpeJB0RttaRwxMztX9zgYZweeqVmfUN3S0ZDCxj5wwCCzsGX+ZLvbYUHVwad3i+L27Cc9TsHPwUb1cUoMZFWljukDJSezjf39ViS6bzo/dM0o9B9NMoGY+3ytSpdt/3AUByMZ70mBueKbUVZzpduG4ggkNT1zeHMTkS98moj3YdpSTdhOpJy7pd/NKIHw05kMWDPvovDPPaTT1NSaPuRkKstP8lZL2KI1o4Lz93atmv/HsgELvV8WYGexSOxNQIs8fAYPiIOMIYdDJNJOQNJS0GRTpxtPWj/UZhXPbuHEFq9H8EycXueKaDq4bGtLDhXNz0qQ9iVif3ZOcd9oGlKQ3C6VaTwlnSuAR235Ilw+y9u01XTok0aHTcaEPJi+aa1FlrehJPNIpI42MkwqPrOJQSHaE+R2/+481jEN9AiWlk+2G11cKQ1yewOBSv8T/PJ5KwjIUZ0VWfh7v4G6fwAy7ilagtbUGrxaaUkMJdkQzo+IQlH9jt6EMrDjjcejTpWM5qPdp9krG4T3QUItDvG1sxTGpkk1DMc6i3ANgaxEV8OWatzc+L0MkC9lqm5BqM6dsvsbIlZSJXFyPMT1PbSAW08tLmb48hpTvY3tyuRY3YY8/w=

  - os: linux
    name: "Build Linux CLANGPDB/GCC5"
    dist: xenial
    addons:
      apt:
        packages:
        - nasm
        - uuid-dev
        - libssl-dev
        - iasl

    script:
    - export PYTHON_COMMAND=python3 # Something is broken in Travis CI environment, it asks for python3.7.
    - file="clang+llvm-9.0.1-x86_64-linux-gnu-ubuntu-16.04"
    - suf=".tar.xz"
    - curl -LO "https://github.com/llvm/llvm-project/releases/download/llvmorg-9.0.1/${file}${suf}" || exit 1
    - sum=$(shasum -a 256 "${file}${suf}" | cut -f1 -d' ')
    - expsum="1af280e96fec62acf5f3bb525e36baafe09f95f940dc9806e22809a83dfff4f8"
    - if [ "$sum" != "$expsum" ]; then echo "Invalid checksum $sum" ; exit 1 ; fi
    - tar -xf "${file}${suf}" || exit 1
    - export PATH="$(pwd)/${file}/bin:$PATH"
    - "./build_duet.tool"
    - "./build_oc.tool"

  - os: linux
    name: "Build Linux CLANG38"
    dist: xenial
    addons:
      apt:
        packages:
        - nasm
        - uuid-dev
        - iasl
        - clang-8
        - llvm-8-dev

    script:
    - export PYTHON_COMMAND=python3 # Something is broken in Travis CI environment, it asks for python3.7.
    - sudo apt-get remove -y llvm-3.8 libllvm3.8 # Move LLVM 3.8 out of the way.
    - export PATH="/usr/lib/llvm-8/bin:$PATH" # Default compiler (7.0 or 3.8) has no LTO plugin.
    - export TOOLCHAINS=CLANG38
    - "./build_duet.tool"
    - "./build_oc.tool"
    # Currently this is too ugly, but maybe we can use that in the future.
    - sudo apt-get install -y doxygen texlive texlive-latex-extra
    - abort() { tail -200 log.txt ; exit 1 ; }
    - doxygen Doxyfile &> log.txt || abort
    - cd Doxy/latex || abort
    - make pdf &> log.txt || abort

  - os: windows
    name: "Build Windows VS2017"

    script:
    - HAS_OPENSSL_BUILD=0
    - choco install python --version=3.8.6 # Expected by ocbuild.
    - choco install microsoft-build-tools visualcpp-build-tools make nasm zip
    - choco install iasl --version=2017.11.10
    - "./build_duet.tool"
    - "./build_oc.tool"

  - os: osx
    name: "Analyze Scripts"
    osx_image: xcode11.6

    script:
    - HOMEBREW_NO_INSTALL_CLEANUP=1 brew install shellcheck
    - find . \( -name "*.tool" -o -name "*.command" -o -name "*.sh" \) -exec sh -c 'for TargetFile; do shellcheck --severity=info "${TargetFile}" || exit 1; done' sh {} +
    - pip2 install pyyaml
    - cd AppleModels || exit 1
    - python2 ./update_generated.py  || exit 1
    - if [ "$(git status --porcelain)" != "" ]; then echo "DataBase desync"; exit 1 ; fi
    - cd - || exit 1
    - plutil -lint Docs/Sample.plist || exit 1
    - plutil -lint Docs/SampleCustom.plist || exit 1

  - os: osx
    name: "Analyze Coverity"
    osx_image: xcode11.6
    compiler: clang

    before_install:
      - HOMEBREW_NO_INSTALL_CLEANUP=1 HOMEBREW_NO_AUTO_UPDATE=1 brew install openssl
      - curl -Ls https://entrust.com/root-certificates/entrust_l1k.cer -o ~/entrust_l1k.crt || exit 1
      - curl -LS https://curl.haxx.se/ca/cacert.pem -o ~/cacert.pem || exit 1
      - cat ~/entrust_l1k.crt >> ~/cacert.pem || exit 1
      - echo "cacert=\"$HOME/cacert.pem\"" > ~/.curlrc || exit 1
      - echo "ca_certificate=$HOME/cacert.pem" > ~/.wgetrc || exit 1

    script:
      - echo "This script runs coverity..."

    addons:
      coverity_scan:
        project:
          name: "hjp521/OpenCorePkg"
          description: "OpenCorePkg"
        notification_email: $NOTIFICATION_EMAIL
        build_command_prepend: "./build_oc.tool --skip-build --skip-package && cd UDK ; src=$(curl -Lfs https://raw.githubusercontent.com/acidanthera/Lilu/master/Lilu/Scripts/covstrap.sh) && eval \"$src\" || exit 1"
        build_command: "../build_oc.tool --skip-tests --skip-package RELEASE"
        branch_pattern: master
