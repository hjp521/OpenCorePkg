language: cpp
env:
  global:
  - FORCE_INSTALL=1
  - HAS_OPENSSL_BUILD=1
  - HAS_OPENSSL_W32BUILD=0
  - WERROR=1 

matrix:
  include:

  - os: osx
    name: "Build macOS XCODE5"
    osx_image: xcode10.2
    compiler: clang

    script:
    - HOMEBREW_NO_INSTALL_CLEANUP=1 HOMEBREW_NO_AUTO_UPDATE=1 brew install openssl mingw-w64
    - "./build_duet.tool"
    - "./build_oc.tool"

    deploy:
      provider: releases
      user: "GITHUBUSERNAME"
      password: "GITHUBPASSWORD"
      skip_cleanup: true
      file:
      - Binaries/*.zip
      file_glob: true
      on:
        tags: true
     


  - os: linux
    name: "Build Linux CLANGPDB/GCC5"
    dist: xenial
    addons:
      apt:
        packages:
        - nasm
        - uuid-dev
        - libssl-dev
        - iasl

    script:
    - export PYTHON_COMMAND=python3 # Something is broken in Travis CI environment, it asks for python3.7.
    - file="clang+llvm-9.0.1-x86_64-linux-gnu-ubuntu-16.04"
    - suf=".tar.xz"
    - curl -LO "https://github.com/llvm/llvm-project/releases/download/llvmorg-9.0.1/${file}${suf}" || exit 1
    - sum=$(shasum -a 256 "${file}${suf}" | cut -f1 -d' ')
    - expsum="1af280e96fec62acf5f3bb525e36baafe09f95f940dc9806e22809a83dfff4f8"
    - if [ "$sum" != "$expsum" ]; then echo "Invalid checksum $sum" ; exit 1 ; fi
    - tar -xf "${file}${suf}" || exit 1
    - export PATH="$(pwd)/${file}/bin:$PATH"
    - "./build_duet.tool"
    - "./build_oc.tool"

  - os: linux
    name: "Build Linux CLANG38"
    dist: xenial
    addons:
      apt:
        packages:
        - nasm
        - uuid-dev
        - iasl
        - clang-8
        - llvm-8-dev

    script:
    - export PYTHON_COMMAND=python3 # Something is broken in Travis CI environment, it asks for python3.7.
    - sudo apt-get remove -y llvm-3.8 libllvm3.8 # Move LLVM 3.8 out of the way.
    - export PATH="/usr/lib/llvm-8/bin:$PATH" # Default compiler (7.0 or 3.8) has no LTO plugin.
    - export TOOLCHAINS=CLANG38
    - "./build_duet.tool"
    - "./build_oc.tool"
    # Currently this is too ugly, but maybe we can use that in the future.
    - sudo apt-get install -y doxygen texlive texlive-latex-extra
    - abort() { tail -200 log.txt ; exit 1 ; }
    - doxygen Doxyfile &> log.txt || abort
    - cd Doxy/latex || abort
    - make pdf &> log.txt || abort

  - os: windows
    name: "Build Windows VS2017"

    script:
    - HAS_OPENSSL_BUILD=0
    - choco install python --version=3.8.6 # Expected by ocbuild.
    - choco install microsoft-build-tools visualcpp-build-tools make nasm zip
    - choco install iasl --version=2017.11.10
    - "./build_duet.tool"
    - "./build_oc.tool"

